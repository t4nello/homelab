version: '3.8'

services:
  tunnel:
    image: cloudflare/cloudflared
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN={{TUNNEL_TOKEN}}
      - TUNNEL_LOGLEVEL=TRACE
      - TUNNEL_METRICS=0.0.0.0:60123
    healthcheck:
      test: ["CMD", "cloudflared", "tunnel", "--metrics", "localhost:60123", "ready"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - management
      - monitoring

  cloudflared:
    image: cloudflare/cloudflared
    container_name: cloudflaredns
    restart: unless-stopped
    environment:
      - TUNNEL_DNS_UPSTREAM=https://1.1.1.1/dns-query,https://1.0.0.1/dns-query
      - TUNNEL_DNS_PORT=5053
      - TUNNEL_DNS_ADDRESS=0.0.0.0
      - TUNNEL_METRICS=0.0.0.0:60124
    command: proxy-dns
    networks:
      - management
      - monitoring

  traefik:
    image: traefik:v3.3.4
    container_name: traefik
    command:
      - "--api=true"
      - "--log.level=debug"
      - "--providers.docker.exposedByDefault=false"
      - "--accesslog=true"
      - "--providers.file.filename=/etc/traefik/definition.yml"
      - "--providers.file.watch=true"
      - "--providers.docker=true"           
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.qbittorrent-tcp.address=:6881"
      - "--entrypoints.qbittorrent-udp.address=:6881/udp"
      - "--entrypoints.minecraft.address=:25565"
      - "--metrics.prometheus=true"
    ports:
      - "6881:6881"      
      - "6881:6881/udp" 
      - "25565:25565"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - {{DEPLOY_PATH}}/management-stack/usersfile:/usersfile
    labels:
      - "traefik.enable=true" 
      - "traefik.http.routers.dashboard.entrypoints={{TRAEFIK_ENTRYPOINT | default ('websecure')}}"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.{{HOST}}`)"
      - "traefik.http.routers.dashboard.tls={{TRAEFIK_TLS | default ('true')}}"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.middlewares.simpleauth.basicauth.usersfile=./usersfile"
      - "traefik.http.routers.dashboard.middlewares=simpleauth"
      - "traefik.http.middlewares.simpleauth.basicauth.removeheader=false"
    restart: unless-stopped
    networks:
      - management
      - monitoring
      - torrent

  portainer:
    image: portainer/portainer-${PORTAINER_EDITION:-ce}:latest
    container_name: portainer
    command:
      - "--log-level=DEBUG"
      - "--host=unix:///var/run/docker.sock"
      - "--admin-password={{ PORTAINER_PASSWORD_BCRYPT }}"
{% if PORTAINER_EDITION == 'ee' %}
      - "--license-key={{ PORTAINER_LICENCE_KEY }}"
{% endif %}
    ports:
      - "9000:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock" 
      - "portainer_data:/data"
    labels:
      - "traefik.enable=true" 
      - "traefik.http.routers.portainer.entrypoints={{TRAEFIK_ENTRYPOINT | default ('websecure')}}"
      - "traefik.http.routers.portainer.rule=Host(`portainer.{{HOST}}`)"
      - "traefik.http.routers.portainer.tls={{TRAEFIK_TLS | default ('true')}}"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"   
      - "traefik.docker.network=management"
    restart: unless-stopped
    networks:
      - management


networks:
  management:
    external: true
  monitoring:
    external: true
  torrent:
    external: true

volumes:
  portainer_data:
