version: '3.8'

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9100"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus
      - {{DEPLOY_PATH}}/monitoring-stack/config/prometheus:/etc/prometheus/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.{{HOST}}`)"
      - "traefik.http.routers.prometheus.entryPoints={{TRAEFIK_ENTRYPOINT | default ('websecure')}}"
      - "traefik.http.routers.prometheus.tls={{TRAEFIK_TLS | default ('true')}}"
      - "traefik.http.routers.prometheus.priority=15"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.docker.network=monitoring"
      - "traefik.http.routers.prometheus.middlewares=simpleauth"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'  
      - '--storage.tsdb.path=/prometheus'        
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - monitoring
    
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      -  {{DEPLOY_PATH}}/monitoring-stack/config/grafana/dashboards:/var/lib/grafana/dashboards
      -  {{DEPLOY_PATH}}/monitoring-stack/config/grafana/provisioning:/etc/grafana/provisioning
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.{{HOST}}`)"
      - "traefik.http.routers.grafana.entryPoints={{TRAEFIK_ENTRYPOINT | default ('websecure')}}"
      - "traefik.http.routers.grafana.tls{{TRAEFIK_TLS | default ('true')}}"
      - "traefik.http.routers.grafana.priority=15"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=monitoring"
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    networks:
      - monitoring

networks:
  monitoring:
    external: true

volumes:
  prometheus_data: {}
  grafana_data: {}